// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkScheduleData.Data;

namespace WorkScheduleData.Migrations
{
    [DbContext(typeof(WorkScheduleContext))]
    [Migration("20220506100717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkScheduleData.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WorkScheduleData.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeSkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeSkillsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<decimal>("HourlyWage")
                        .HasColumnType("money");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("SkillsId")
                        .HasColumnType("int")
                        .HasColumnName("SkillsID");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSkillsId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeSkills_EmployeeID");

                    b.HasIndex(new[] { "SkillsId" }, "IX_EmployeeSkills_SkillsID1");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WorkScheduleData.Models.PlacementContract", b =>
                {
                    b.Property<int>("PlacementContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlacementContractID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PlacementContractId");

                    b.HasIndex(new[] { "LocationId" }, "IX_PlacementContracts_LocationID");

                    b.ToTable("PlacementContracts");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<decimal>("HourlyWage")
                        .HasColumnType("decimal(11,2)");

                    b.Property<bool>("Overtime")
                        .HasColumnType("bit");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int")
                        .HasColumnName("ShiftID");

                    b.HasKey("ScheduleId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Schedules_EmployeeID");

                    b.HasIndex(new[] { "ShiftId" }, "IX_Schedules_ShiftID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShiftID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("NumberOfEmployees")
                        .HasColumnType("tinyint");

                    b.Property<int>("PlacementContractId")
                        .HasColumnType("int")
                        .HasColumnName("PlacementContractID");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("time")
                        .HasColumnName("timeSpan");

                    b.HasKey("ShiftId");

                    b.HasIndex(new[] { "PlacementContractId" }, "IX_Shifts_PlacementContractID");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Skill", b =>
                {
                    b.Property<int>("SkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkillsID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresTicket")
                        .HasColumnType("bit");

                    b.HasKey("SkillsId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("WorkScheduleData.Models.EmployeeSkill", b =>
                {
                    b.HasOne("WorkScheduleData.Models.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkScheduleData.Models.Skill", "Skills")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillsId")
                        .HasConstraintName("FK_EmployeeSkills_Skills_SkillsID1");

                    b.Navigation("Employee");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("WorkScheduleData.Models.PlacementContract", b =>
                {
                    b.HasOne("WorkScheduleData.Models.Location", "Location")
                        .WithMany("PlacementContracts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Schedule", b =>
                {
                    b.HasOne("WorkScheduleData.Models.Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkScheduleData.Models.Shift", "Shift")
                        .WithMany("Schedules")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Shift", b =>
                {
                    b.HasOne("WorkScheduleData.Models.PlacementContract", "PlacementContract")
                        .WithMany("Shifts")
                        .HasForeignKey("PlacementContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlacementContract");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Employee", b =>
                {
                    b.Navigation("EmployeeSkills");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Location", b =>
                {
                    b.Navigation("PlacementContracts");
                });

            modelBuilder.Entity("WorkScheduleData.Models.PlacementContract", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Shift", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("WorkScheduleData.Models.Skill", b =>
                {
                    b.Navigation("EmployeeSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
